from os.path import join as opj

rule all_binning:
    input:
        #expand(str(Cfg['all']['output_fp']/'binning'/'dastool'/'{sample}'),
        #       sample=Samples.keys())
        expand(str(Cfg['all']['output_fp']/'binning'/'{sample}_dastool.done'),sample=Samples.keys())
 

#####################################
########### MAXBIN2 #################
#####################################

rule maxbin2:
    input:
        contig=str(ASSEMBLY_FP/'contigs'/'{sample}-contigs.fa'),
        reads=str(QC_FP/'decontam'/'{sample}_1.fastq.gz')
    output:
        outdir=str(Cfg['all']['output_fp']/'binning'/'{sample}'/'maxbin_output'/'maxbin_output'),
        outfile=str(Cfg['all']['output_fp']/'binning'/'{sample}'/'maxbin_output'/'maxbin_output.001.fasta')
        #directory(str(Cfg['all']['output_fp']/'binning'/'maxbin'/'{sample}-maxbin'))
        #str(Cfg['all']['output_fp']/'binning'/'maxbin'/'{sample}-maxbin'/'{sample}.summary'),
        #str(Cfg['all']['output_fp']/'binning'/'maxbin'/'{sample}'/'{sample}.summary'),
    log:
        str(Cfg['all']['output_fp']/'binning'/'logs'/'{sample}-maxbin.log')
    params:
        markerset=config["maxbin"]["markerset"],
        threads=Cfg['sbx_binning']['threads'],
        m=Cfg['sbx_binning']['min_contig_length']
    shell:
        """
        #mkdir -p {params.outdir}
        run_MaxBin.pl -thread {params.threads} -contig {input.contig} -markerset {params.markerset} -reads {input.reads} -min_contig_length 1000 -out {output.outdir} &&\
        touch maxbin.done &&\
        date) 2> >(tee {log}.stderr) > >(tee {log}.stdout)
        """

#####################################
########### METABAT2 ################
#####################################

rule depth_files:
    input:
        bam=str(ASSEMBLY_FP/'contigs'/'minimap2'/'{sample}.sorted.bam')
    output:
        depth=str(ASSEMBLY_FP/'contigs'/'{sample}_depth.txt')
    shell:
        """
        (date &&\
        jgi_summarize_bam_contig_depths --outputDepth {output.depth} {input.bam} &&\
        touch depth_file.done &&\
        date) 2> >(tee {log}.stderr) > >(tee {log}.stdout)
        """

rule metabat2:
    input:
        contig=str(ASSEMBLY_FP/'contigs'/'{sample}-contigs.fa'),
        depth=str(ASSEMBLY_FP/'contigs'/'{sample}_depth.txt')
    output:
        outdir=str(Cfg['all']['output_fp']/'binning'/'{sample}'/'metabat_output'),
        outfile=str(Cfg['all']['output_fp']/'binning'/'{sample}'/'metabat_output'/'{sample}_metabat.scaffolds2bin.tsv')
    log:
        str(Cfg['all']['output_fp']/'binning'/'logs'/'{sample}-metabat.log')
    params:
        m=Cfg['sbx_binning']['min_contig_length'],
        threads=Cfg['sbx_binning']['threads']

    shell:
        """
        (date &&\
        metabat2 -i {input.contig} -a {input.depth} -m {params.m} -t {params.threads} -o {output.outfile} --saveCls --noBinOut &&\
        touch metabat2.done &&\
        date) 2> >(tee {log}.stderr) > >(tee {log}.stdout)
        """


#####################################
########### DAS_Tool ################
#####################################

rule scaffold_list:
    input:
        metabat=str(Cfg['all']['output_fp']/'binning'/'{sample}'/'metabat_output'),
        file=str(Cfg['all']['output_fp']/'binning'/'{sample}'/'maxbin_output'/'maxbin_output.001.fasta')
    output:
        tsv=str(Cfg['all']['output_fp']/'binning'/'{sample}'/'maxbin_output'/'{sample}_maxbin.scaffolds2bin.tsv')
    shell:
        """
        (date &&\
        Fasta_to_Scaffolds2Bin.sh -e fasta -i {params} > {output.tsv} &&\
        touch scaffold_list.done &&\
        date) 2> >(tee {log}.stderr) > >(tee {log}.stdout)
        """

rule DAS_Tool: 
    input:
        contig=str(ASSEMBLY_FP/'contigs'/'{sample}-contigs.fa'),
        maxbin=str(Cfg['all']['output_fp']/'binning'/'{sample}'/'maxbin_output'/'{sample}_maxbin.scaffolds2bin.tsv'),
        metabat=str(Cfg['all']['output_fp']/'binning'/'{sample}'/'metabat_output'/'{sample}_metabat.scaffolds2bin.tsv')
    output:
        das_out=directory(str(Cfg['all']['output_fp']/'binning'/'{sample'/'dastool_output'/'{sample}_DAStool_bins')),
        damfile=touch(str(Cfg['all']['output_fp']/'binning'/'{sample}_dastool.done'))
    params:
        threads=Cfg['sbx_binning']['threads'],
        prot=str(ANNOTATION_FP/'genes'/'prodigal'/'{sample}_genes_prot.fa'),
        basename=str(Cfg['all']['output_fp']/'binning'/'dastool'/'{sample}')
    log:
        str(Cfg['all']['output_fp']/'binning'/'logs'/'{sample}-dastool.log')
    shell:
        """
        (date &&\
        DAS_Tool -i {input.maxbin},{input.metabat} -c {input.contig} -l MaxBin,MetaBAT -o {params.basename} -p {params.prot} -t {params.threads} --write_bins 1 --debug &&\
        touch {output.damfile} &&\
        date) 2> >(tee {log}.stderr) > >(tee {log}.stdout)
        """
    



